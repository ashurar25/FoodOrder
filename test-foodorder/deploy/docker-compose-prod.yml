version: '3.8'

services:
  restaurant-app:
    build: 
      context: ..
      dockerfile: Dockerfile
    container_name: restaurant-ordering-system
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
    volumes:
      - restaurant_data:/app/server/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/restaurant', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.restaurant.service=main"
      - "com.restaurant.theme=mint"

  nginx:
    image: nginx:alpine
    container_name: restaurant-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      restaurant-app:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - production
    labels:
      - "com.restaurant.service=proxy"

volumes:
  restaurant_data:
    driver: local
    labels:
      - "com.restaurant.data=persistent"
  nginx_logs:
    driver: local

networks:
  default:
    name: restaurant-network
    driver: bridge